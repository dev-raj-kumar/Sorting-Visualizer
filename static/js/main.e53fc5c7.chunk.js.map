{"version":3,"sources":["logo.svg","SortingAlgorithms/mergeSort.js","SortingAlgorithms/quickSort.js","SortingAlgorithms/heapSort.js","SortingVisualizer/SortingVisualizer.jsx","SortingAlgorithms/bubbleSort.js","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMergeFinal","doMerge","getQuickSortAnimations","quickSortHelper","s","e","p","min","max","random","t","part","pivot","partition","getHeapSortAnimations","n","buildMaxHeap","index","heapSortHelper","animationSpeed","noOfBars","PRIMARY_COLOR","SORTED_COLOR","CORRECT_ORDER","WRONG_ORDER","SWAP_COLOR","PIVOT_COLOR","SortingVisualizer","props","state","x","disabled","this","resetArray","parseInt","arr","randomIntFromInterval","pow","setState","arrayBars","document","getElementsByClassName","id","barOneStyle","style","setTimeout","backgroundColor","height","barTwoStyle","color","enableButtons","f","flag","val","getBubbleSortAnimations","javaScriptSortedArray","sort","a","b","mergeSortedArray","console","log","arraysAreEqual","numWidth","window","innerWidth","width","margin","fontSize","className","onClick","axis","onChange","styles","track","active","mergeSort","bubbleSort","quickSort","heapSort","map","marginLeft","marginRight","React","Component","arrayOne","arrayTwo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e53fc5c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n   //return array;\r\n  }\r\n  \r\n  function mergeSortHelper(mainArray,startIdx,endIdx,auxiliaryArray,animations) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(mainArray,startIdx,middleIdx,endIdx,auxiliaryArray,animations,) {\r\n    if(startIdx === 0 && endIdx === (mainArray.length-1)){\r\n      doMergeFinal(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n      return;\r\n    }\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        animations.push([1,k]); // yellow\r\n        animations.push([-1,k,auxiliaryArray[i]]);\r\n\r\n        animations.push([2,j,k]); // green\r\n        animations.push([-2,j,k]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        \r\n        animations.push([3,j,k]);  // red\r\n        animations.push([-3,j,k,auxiliaryArray[j]]);\r\n\r\n        animations.push([2,j,k,]); // green\r\n        animations.push([-2,j,k]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n     \r\n      animations.push([1,k]); // yellow\r\n        animations.push([-1,k,auxiliaryArray[i]]);\r\n        animations.push([4,k]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n    \r\n      animations.push([3,j,k]);  // red\r\n        animations.push([-3,j,k,auxiliaryArray[j]]);\r\n        animations.push([4,k]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n\r\n  function doMergeFinal(mainArray,startIdx,middleIdx,endIdx,auxiliaryArray,animations,) {\r\n    \r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      \r\n\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        \r\n        animations.push([1,k]); // yellow\r\n        animations.push([-1,k,auxiliaryArray[i]]);\r\n\r\n        animations.push([2,j,k]); // green\r\n        animations.push([-2,j,k]);\r\n        animations.push([0,k]); // orange\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        \r\n        animations.push([3,j,k]);  // red\r\n        animations.push([-3,j,k,auxiliaryArray[j]]);\r\n\r\n        animations.push([2,j,k,]); // green\r\n        animations.push([-2,j,k]);\r\n        animations.push([0,k]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n     \r\n      animations.push([1,k]); // yellow\r\n      animations.push([-1,k,auxiliaryArray[i]]);\r\n      animations.push([0,k]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      \r\n      animations.push([3,j,k]);  // red\r\n      animations.push([-3,j,k,auxiliaryArray[j]]);\r\n      animations.push([0,k]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }","export function getQuickSortAnimations(array){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n\r\n    quickSortHelper(0,array.length-1,array,animations);\r\n    //console.log(animations);\r\n    return animations;\r\n    //return array;\r\n}\r\n\r\nfunction quickSortHelper(s,e,array,animations){\r\n    if(s < e){\r\n        let p = randomIntFromInterval(s,e);\r\n        let t = array[p];\r\n        array[p]=array[e]; \r\n        array[e]=t;\r\n        animations.push([4,p,e])        // pink color\r\n        animations.push([-4,p,e,array[p],array[e]]);\r\n\r\n        animations.push([5,e]);    // pivot color\r\n        let part = partition(s,e,array,animations);\r\n        quickSortHelper(s,part-1,array,animations);\r\n        quickSortHelper(part+1,e,array,animations);\r\n    }\r\n    else if(s === e){\r\n        animations.push([0,s]);\r\n    }\r\n}\r\n\r\nfunction partition(s,e,array,animations){\r\n    let pivot = array[e];\r\n    let i = s-1;\r\n\r\n    for(let j=s;j<e;j++){\r\n        \r\n        if(array[j] <= pivot){\r\n            animations.push([1,j,e]); // red color\r\n           // animations.push([-1,j,e]);\r\n            let t = array[j];\r\n            array[j]=array[++i];\r\n            array[i]=t;\r\n            animations.push([2,i,j]); // yellow color\r\n            \r\n            animations.push([-2,i,j,t,array[j]]); \r\n        }\r\n        \r\n            animations.push([3,j,e]); // green color\r\n            animations.push([-3,j,e]); // change e to pivot color\r\n        \r\n    }\r\n\r\n    \r\n    //animations.push([-1,e,i]);\r\n\r\n    let t = array[e];\r\n    array[e]=array[++i];\r\n    array[i]=t;\r\n\r\n    animations.push([1,e,i]);\r\n    animations.push([2,e,i]);\r\n    animations.push([-2,e,i,array[e],t]); \r\n\r\n    animations.push([-5,e]);\r\n\r\n    animations.push([0,i]);  // orange color\r\n    return i;\r\n}\r\n\r\nfunction randomIntFromInterval(min,max){\r\n    return Math.floor(Math.random()*(max-min+1) +min);\r\n}","export function getHeapSortAnimations(array){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n\r\n    heapSortHelper(array.length,array,animations);\r\n    //return array;\r\n   // console.log(array);\r\n    return animations;\r\n}\r\n\r\nfunction heapSortHelper(n,array,animations){\r\n\r\n    buildMaxHeap(array,n,animations);\r\n    \r\n    for(let i = n-1; i>0 ; i--){\r\n\r\n        let t = array[i];\r\n        array[i]=array[0];\r\n        array[0]=t;\r\n        animations.push([3,0,i]);\r\n        animations.push([-3,0,i,t,array[i]]);\r\n        animations.push([0,i]);\r\n\r\n        let j=0,index;\r\n\r\n        do{\r\n\r\n            index = ((2*j) + 1);\r\n            \r\n            if (index < (i - 1) && (array[index] < array[index + 1]))\r\n                index++;\r\n          \r\n            if ( (index < i) && (array[j] < array[index])){\r\n                \r\n                let t = array[j];\r\n                array[j]=array[index];\r\n                array[index]=t;\r\n                animations.push([1,j,index]);\r\n                animations.push([-1,j,index,array[j],array[index]]);\r\n                animations.push([2,j,index]);\r\n                animations.push([-2,j,index]);\r\n            }\r\n            else{\r\n                if((2*j)+1 < (i-1)){\r\n                animations.push([2,j,(2*j)+1]);\r\n                animations.push([-2,j,(2*j)+1]);\r\n                }\r\n                if((2*j)+2 < i){\r\n                animations.push([2,j,(2*j)+2]);\r\n                animations.push([-2,j,(2*j)+2]);\r\n                }\r\n            break;\r\n            }\r\n          \r\n            j = index;\r\n        }while(index < i);\r\n    }\r\n}\r\n\r\n\r\nfunction buildMaxHeap(array,n,animations) \r\n{ \r\n    for (let i = 1; i < n; i++) \r\n    {\r\n        // if child is bigger than parent\r\n        if (array[i] > array[Math.floor((i - 1) / 2)]) \r\n        {\r\n            let j = i;\r\n      \r\n            // swap child and parent until\r\n            // parent is smaller\r\n            while (j>0 && (array[j] > array[Math.floor((j - 1) / 2)]))\r\n            {\r\n                let p = Math.floor((j - 1) / 2);\r\n                let t = array[p];\r\n                array[p]=array[j];\r\n                array[j]=t;\r\n                animations.push([1,j,p]);\r\n                animations.push([-1,j,p,array[j],array[p]]);\r\n                animations.push([2,j,p]);\r\n                animations.push([-2,j,p]);\r\n                j = p;\r\n            }\r\n            if(j > 0){\r\n                animations.push([2,j,Math.floor((j - 1) / 2)]);\r\n                animations.push([-2,j,Math.floor((j - 1) / 2)]);\r\n            }\r\n        }\r\n        else{\r\n            animations.push([2,i,Math.floor((i - 1) / 2)]);\r\n            animations.push([-2,i,Math.floor((i - 1) / 2)]);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Slider from 'react-input-slider';\r\nimport './SortingVisualizer.css';\r\nimport {getMergeSortAnimations} from '../SortingAlgorithms/mergeSort.js';\r\nimport {getBubbleSortAnimations} from '../SortingAlgorithms/bubbleSort.js';\r\nimport {getQuickSortAnimations} from '../SortingAlgorithms/quickSort.js';\r\nimport {getHeapSortAnimations} from '../SortingAlgorithms/heapSort.js';\r\n\r\n// Change this value for the speed of the animations.\r\nvar animationSpeed = 5;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nvar noOfBars = 150;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = '#5bc0de';\r\n\r\nconst SORTED_COLOR = '#FF7E67';\r\n\r\nconst CORRECT_ORDER = '#54E346'; \r\n\r\nconst WRONG_ORDER = '#DA0037';\r\n\r\nconst SWAP_COLOR = '#FFC107';\r\n\r\nconst PIVOT_COLOR = '#890596';\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            x : 30,\r\n            disabled : false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.resetArray(this.state.x);\r\n       // console.log(\"componentDidMount\");\r\n        //console.log(this.state);\r\n    }\r\n\r\n     resetArray(x){\r\n         noOfBars = Math.floor((parseInt(x) + 3) * 1.65);\r\n        const arr = [];\r\n        for(let i=0;i<noOfBars;i++){\r\n            arr.push(randomIntFromInterval(3,583));\r\n        }\r\n        animationSpeed = 575 - Math.pow(arr.length, 2) > 0 ?575 - Math.pow(arr.length, 2) :\r\n                    noOfBars < 50 ? 50:\r\n                    noOfBars < 75 ? 41:\r\n                    noOfBars < 100 ? 31:\r\n                    noOfBars < 125 ? 20:\r\n                    noOfBars < 150 ? 13:\r\n                    4;\r\n      //  console.log(arr.length);\r\n         this.setState({array:arr,x:x,disabled:false});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    enableButtons(){\r\n        this.setState({disabled : false});\r\n        //console.log(\"enabled Buttons\");\r\n    }\r\n\r\n    mergeSort() {\r\n       // console.log(\"merge sort clicked\");\r\n        const animations = getMergeSortAnimations(this.state.array);\r\n       // console.log(animations);\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        for (let i = 0; i < animations.length; i++) {\r\n          \r\n            const id = animations[i][0];\r\n            if(id === 4){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                  }, i * animationSpeed);\r\n            }\r\n            else if(id === 1 || id === -1){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                setTimeout(() => {\r\n                    if(id === 1)\r\n                    barOneStyle.backgroundColor = `${SWAP_COLOR}`;\r\n                    else\r\n                    barOneStyle.height = `${animations[i][2]}px`; \r\n                  }, i * animationSpeed);\r\n            }\r\n            else if(id !== 0){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                const barTwoStyle = arrayBars[animations[i][2]].style;\r\n\r\n                const color =  (id === 2) ? `${CORRECT_ORDER}` :(id === -2)? `${PRIMARY_COLOR}` :  `${WRONG_ORDER}`;\r\n                if(id === 3 || id === -3){\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                        barTwoStyle.backgroundColor = color;\r\n                        if(id === -3)\r\n                        barTwoStyle.height = `${animations[i][3]}px`; \r\n                      }, i * animationSpeed);\r\n                }\r\n                else{\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                        barTwoStyle.backgroundColor = color;\r\n                      }, i * animationSpeed);\r\n                }\r\n            }\r\n            else if(id === 0){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = `${SORTED_COLOR}`;\r\n                  }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            for(let j=0;j<this.state.array.length;j++){\r\n                const barOneStyle = arrayBars[j].style;\r\n                barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n            }\r\n            this.enableButtons();\r\n          }, animations.length * animationSpeed);\r\n    }\r\n\r\n    heapSort(){\r\n       // console.log(\"Heap Sort got clicked\");\r\n        const animations = getHeapSortAnimations(this.state.array);\r\n       // console.log(animations);\r\n       const arrayBars = document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<animations.length;i++){\r\n            \r\n            const id = animations[i][0];\r\n            if(id !== 0){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                const barTwoStyle = arrayBars[animations[i][2]].style;\r\n\r\n                const color = (id === 1 || id === -1) ? `${WRONG_ORDER}` : (id === 2) ? `${CORRECT_ORDER}` : `${PIVOT_COLOR}`;\r\n\r\n                if(id !== -2){\r\n\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                        barTwoStyle.backgroundColor = color;\r\n                        if(id === -1 || id === -3){\r\n                            \r\n                            barOneStyle.height = `${animations[i][3]}px`;\r\n                            barTwoStyle.height = `${animations[i][4]}px`;\r\n                        }\r\n                      }, i * animationSpeed);\r\n                }\r\n                else{\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                        barTwoStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                      }, i * animationSpeed);\r\n                }\r\n            }\r\n            else if(id === 0){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = `${SORTED_COLOR}`;\r\n                  }, i * animationSpeed);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            for(let j=0;j<this.state.array.length;j++){\r\n               \r\n                const barOneStyle = arrayBars[j].style;\r\n                barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n            }\r\n            this.enableButtons();\r\n          }, animations.length * animationSpeed);\r\n    }\r\n\r\n    bubbleSort(){\r\n       // console.log(\"Bubble sort got clicked\");\r\n        const animations = getBubbleSortAnimations(this.state.array);\r\n      \r\n        //console.log(this.state.array);\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const id = animations[i][0];\r\n            if(id !== 0){\r\n                \r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                const barTwoStyle = arrayBars[animations[i][2]].style;\r\n                const color = (id === 1) ? `${CORRECT_ORDER}` : `${WRONG_ORDER}`;\r\n                if(id !== -1){\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                    if(id === -2){\r\n                        \r\n                        barOneStyle.height = `${animations[i][3]}px`;\r\n                        barTwoStyle.height = `${animations[i][4]}px`;\r\n                    }\r\n                  }, i * animationSpeed);\r\n                }\r\n                else{\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                        barTwoStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                      }, i * animationSpeed);\r\n                }\r\n            }\r\n            else if(id === 0){\r\n               // console.log(animations[i][1]);\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = `${SORTED_COLOR}`;\r\n                  }, i * animationSpeed);\r\n               \r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            for(let j=0;j<this.state.array.length;j++){\r\n                const barOneStyle = arrayBars[j].style;\r\n                barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n            }\r\n            this.enableButtons();\r\n          }, animations.length * animationSpeed);\r\n    }\r\n\r\n    quickSort(){\r\n        //console.log(\"Quick sort got clicked\");\r\n        const animations = getQuickSortAnimations(this.state.array);\r\n       // console.log(this.state.array);\r\n       const arrayBars = document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<animations.length;i++){\r\n            \r\n            const id = animations[i][0];\r\n            if(id === 5 || id === -5){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                const color = (id === 5) ?  `${PIVOT_COLOR}`: `${PRIMARY_COLOR}`;\r\n\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                      }, i * animationSpeed);\r\n                \r\n            }\r\n            else if(id !== 0){\r\n\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                const barTwoStyle = arrayBars[animations[i][2]].style;\r\n                const color = (id === 1) ? `${WRONG_ORDER}` : (id === 2 || id === -2) ? `${SWAP_COLOR}` : (id === 3) ? `${CORRECT_ORDER}` : `${PIVOT_COLOR}`;\r\n                //console.log(id);\r\n                if(id === 1 || id === 2 || id === 3 || id === 4){\r\n\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                        barTwoStyle.backgroundColor = color;\r\n                      }, i * animationSpeed);\r\n                }\r\n                else if(id === -4 || id === -2){\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                        barTwoStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                        barOneStyle.height = `${animations[i][3]}px`;\r\n                        barTwoStyle.height = `${animations[i][4]}px`;\r\n                      }, i * animationSpeed);\r\n                }\r\n                else{\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n                        barTwoStyle.backgroundColor = `${PIVOT_COLOR}`;\r\n                      }, i * animationSpeed);\r\n                }\r\n            }\r\n            else if(id === 0){\r\n                const barOneStyle = arrayBars[animations[i][1]].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = `${SORTED_COLOR}`;\r\n                  }, i * animationSpeed);\r\n            }\r\n            \r\n        }\r\n\r\n        setTimeout(() => {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            for(let j=0;j<this.state.array.length;j++){\r\n              \r\n                const barOneStyle = arrayBars[j].style;\r\n                barOneStyle.backgroundColor = `${PRIMARY_COLOR}`;\r\n            }\r\n            this.enableButtons();\r\n          }, animations.length * animationSpeed);\r\n        \r\n    }\r\n\r\n    testSortingAlgorithms() {\r\n        for (let i = 0; i < 100; i++) {\r\n          const array = [];\r\n          const length = randomIntFromInterval(1, 1000);\r\n        // const length = 10;\r\n          for (let i = 0; i < length; i++) {\r\n            array.push(randomIntFromInterval(-1000, 1000));\r\n          }\r\n          const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n          const mergeSortedArray = getHeapSortAnimations(array.slice());\r\n         // console.log(javaScriptSortedArray);\r\n          //console.log(mergeSortedArray);\r\n          console.log(arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\r\n        }\r\n        this.enableButtons();\r\n      }\r\n\r\n    render(){\r\n        const arr =  this.state.array;\r\n       // console.log(arr);\r\n\r\n       // const { innerWidth: width, innerHeight: height } = window;\r\n        const numWidth = Math.floor(window.innerWidth / (arr.length * 3));\r\n        const width = numWidth;\r\n        const numMargin = arr.length < 5 ?\r\n            10 : arr.length < 8 ?\r\n                8 : arr.length < 11 ?\r\n                     6 : arr.length < 20 ?\r\n                         4 : arr.length < 50 ?\r\n                             3.5 : arr.length < 100 ?\r\n                                3 : arr.length < 130 ?\r\n                                    2.5 : 2;\r\n        const margin = numMargin;\r\n        const color = numWidth > 20 ? \"white\" : \"transparent\";\r\n        const numFont = numWidth > 70 ?\r\n             20 : numWidth > 60 ?\r\n                18 : numWidth > 50 ?\r\n                    16 : numWidth > 40 ?\r\n                         14 : numWidth > 30 ?\r\n                            12 : numWidth > 20 ?\r\n                                10 : 8;\r\n        const fontSize = numFont;\r\n        \r\n        return(\r\n            <div className=\"bodyContainer\">\r\n                \r\n            <nav className=\"navbar navbar-dark bg-dark navBoot\">\r\n                <button disabled={this.state.disabled} onClick={() => this.setState({disabled:true},() => this.resetArray(this.state.x))} className=\"btn btn-outline-info\">Generate New Array</button>\r\n                <label style={{color:'white'}} className=\"form-check-label\">Change Array Size and Sorting Speed</label>\r\n                <Slider\r\n                    axis=\"x\"\r\n                    x={this.state.x}\r\n                    onChange={({ x }) => this.resetArray(x)}\r\n                    disabled={this.state.disabled}\r\n                    styles={{\r\n                             track: {\r\n                             backgroundColor: '#5bc0de'\r\n                            },\r\n                            active: {\r\n                                 backgroundColor: '#F73859'\r\n                            }}}\r\n                />\r\n                <button disabled={this.state.disabled} onClick={() => this.setState({disabled:true},() => this.mergeSort())} className=\"btn btn-outline-info\">Merge Sort</button>\r\n                <button disabled={this.state.disabled} onClick={() => this.setState({disabled:true},() => this.bubbleSort())} className=\"btn btn-outline-info\">Bubble Sort</button>\r\n                <button disabled={this.state.disabled} onClick={() => this.setState({disabled:true},() => this.quickSort())} className=\"btn btn-outline-info\">Quick Sort</button>\r\n                <button disabled={this.state.disabled} onClick={() => this.setState({disabled:true},() => this.heapSort())} className=\"btn btn-outline-info\">Heap Sort</button>\r\n            </nav>\r\n                \r\n            <div className=\"visualizer\">\r\n            {\r\n                arr.map((val,id) =>{\r\n                    return(\r\n                        <div className=\"array-bar\" key={id}\r\n                         style={{height: `${val}px`, width: `${width}px`, marginLeft: `${margin}px`, marginRight: `${margin}px`, backgroundColor: `${PRIMARY_COLOR}`, color: color, fontSize: `${fontSize}px`}}\r\n                         >\r\n                           \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\n}\r\n\r\nfunction randomIntFromInterval(min,max){\r\n    return Math.floor(Math.random()*(max-min+1) +min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n    if (arrayOne.length !== arrayTwo.length) return false;\r\n    for (let i = 0; i < arrayOne.length; i++) {\r\n      if (arrayOne[i] !== arrayTwo[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n","export function getBubbleSortAnimations(array){\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    let f = 1;let flag = true;\r\n    for(let i=0;i<array.length;i++){\r\n        let j; f = 0;\r\n        if(flag)\r\n        for(j=1;j+i<array.length;j++){\r\n\r\n            animations.push([1,j-1, j]);\r\n            animations.push([-1,j-1, j]);\r\n\r\n            if(array[j-1] > array[j]){\r\n                animations.push([2,j-1,j]);\r\n                animations.push([-2,j-1,j,array[j],array[j-1]]);\r\n                let val = array[j];\r\n                array[j]=array[j-1];\r\n                array[j-1]=val;\r\n                animations.push([1,j-1, j]);\r\n                animations.push([-1,j-1, j]);\r\n                f=1;\r\n            }\r\n        }\r\n        if(f === 0)\r\n        flag = false;\r\n       \r\n        animations.push([0,array.length-i-1]);\r\n    }\r\n    return animations;\r\n   //return array;\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}